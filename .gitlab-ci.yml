stages: [validate, build, deploy, configure, cleanup]

include:
  - component: $CI_SERVER_FQDN/components/opentofu/job-templates@0.48.0
    inputs:
      version: 0.48.0
      root_dir: terraform/dev
      state_name: dev
      var_file: dev.tfvars

.ansible:
  image: alpine:3.20
  stage: configure
  variables:
    ANSIBLE_HOST_KEY_CHECKING: False
    ANSIBLE_CONFIG: ansible.cfg
  before_script:
    - apk add --no-cache ansible bash openssh-client rsync
    - mkdir -p ~/.ssh
    - echo $ANSIBLE_PRIVATE_KEY | base64 -d >> ~/.ssh/id_ed25519 && chmod '600' ~/.ssh/id_ed25519
    - cd ansible



fmt:
  extends: [.opentofu:fmt]

validate:
  extends: [.opentofu:validate]

plan-dev:
  extends: [.opentofu:plan]

plan-prod:
  extends: [.opentofu:plan]
  variables:
    GITLAB_TOFU_VAR_FILE: prod.tfvars
    GITLAB_TOFU_STATE_NAME: prod
  rules:
    - if: $CI_COMMIT_TAG

apply-dev:
  extends: [.opentofu:apply]

apply-prod:
  extends: [.opentofu:apply]
  variables:
    GITLAB_TOFU_VAR_FILE: prod.tfvars
    GITLAB_TOFU_STATE_NAME: prod
  rules:
    - if: $CI_COMMIT_TAG

ansible VM dev:
  extends: .ansible
  script:
    - ansible-playbook -i inventory_VMs.config --extra-vars "environment_name=dev" alma-linux-9.yml

ansible VM prod:
  extends: .ansible
  script:
    - ansible-playbook -i inventory_VMs.config --extra-vars "environment_name=prod" alma-linux-9.yml
  rules:
    - if: $CI_COMMIT_TAG

destroy-dev:
  extends: [.opentofu:destroy]
  rules:
    - when: manual
