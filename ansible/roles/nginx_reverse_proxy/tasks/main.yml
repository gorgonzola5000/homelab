---
- name: Install nginx
  ansible.builtin.apt:
    name:
      - nginx
      - certbot
      - python3-certbot-dns-cloudflare
      - rsync
    state: present
  when: ansible_facts['os_family'] == 'Debian'

- name: Install nginx
  ansible.builtin.dnf:
    name:
      - nginx
      - certbot
      - python3-certbot-dns-cloudflare
      - rsync
    state: present
  when: ansible_facts['os_family'] == 'RedHat'

- name: Ensure ~root/.secrets is present
  ansible.builtin.file:
    path: /home/root/.secrets
    state: directory
    mode: '0600'

- name: Ensure cloudflare.ini is present
  ansible.builtin.template:
    src: cloudflare.ini.j2
    dest: /home/root/.secrets/cloudflare.ini
    mode: '0400'
    owner: root
    group: root

- name: Ensure /etc/nginx/conf.d/ directory exists
  ansible.builtin.file:
    path: '/etc/nginx/conf.d'
    state: directory
    mode: '0644'
    owner: root

- name: Copy nginx config files
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/nginx/conf.d/"
    owner: root
    mode: '0644'
  with_fileglob:
    - "{{ node_name }}/nginx/conf.d/*"
    #    - "{{ nginx_config_files_directory }}/conf.d/*"
  notify:
    - Restart nginx

- name: Check if certificate already exists.
  ansible.builtin.stat:
    path: /etc/letsencrypt/live/{{ domains | first | replace('*.', '') }}/cert.pem
  register: letsencrypt_cert

- name: Acquire Let's Encrypt certificates with Certbot
  ansible.builtin.shell:
    cmd: "certbot certonly -n --agree-tos --email {{ vault_email_certbot }} --no-eff-email --dns-cloudflare --dns-cloudflare-credentials /home/root/.secrets/cloudflare.ini {% for domain in domains %} -d {{ domain }} {% endfor %} --preferred-challenges dns-01"
    executable: /bin/bash
  when:
    - environment_name == "prod"
    - not letsencrypt_cert.stat.exists
  notify:
    - Restart nginx
  changed_when: true

- name: Acquire Let's Encrypt certificates with Certbot - DRY RUN
  ansible.builtin.shell:
    cmd: "certbot certonly --staging -n --agree-tos --email {{ vault_email_certbot }} --no-eff-email --dns-cloudflare --dns-cloudflare-credentials /home/root/.secrets/cloudflare.ini {% for domain in domains %} -d {{ domain }} {% endfor %} --preferred-challenges dns-01"
    executable: /bin/bash
  when:
    - environment_name == "dev"
    - not letsencrypt_cert.stat.exists
  notify:
    - Restart nginx
  changed_when: true

- name: Ensure certbot.timer is enabled
  ansible.builtin.systemd_service:
    unit: certbot.timer
    state: started
    enabled: true
  when: ansible_facts['os_family'] == 'Debian'

- name: Ensure certbot-renew.timer is enabled
  ansible.builtin.systemd_service:
    unit: certbot-renew.timer
    state: started
    enabled: true
  when: ansible_facts['os_family'] == 'RedHat'

- name: Ensure nginx is started and enabled
  ansible.builtin.systemd_service:
    name: nginx
    state: started
    enabled: true
