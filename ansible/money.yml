---
- name: Configure FreeIPA VM
  vars:
    node_name: money
    subdomain: home
    domain: parents-basement.win
  hosts: "{{ node_name }}.{{ subdomain }}.{{ domain }}"
  become: true
  roles:
    - common
    - vm
    - ansible_managed
    - role: freeipa.ansible_freeipa.ipaserver
      vars:
        ipaserver_setup_dns: true
        ipaserver_auto_forwarders: true
        ipaserver_no_reverse: true
        ipaserver_domain: home.parents-basement.win
        ipaserver_realm: HOME.PARENTS-BASEMENT.WIN
        state: present

  tasks:
    - name: Add topology segment
      freeipa.ansible_freeipa.ipatopologysegment:
        ipaadmin_password: "{{ ipaadmin_password }}"
        suffix: "{{ item.suffix }}"
        name: "{{ item.name | default(omit) }}"
        left: "{{ item.left }}"
        right: "{{ item.right }}"
        state: present
      loop:
        - {
            suffix: domain+ca,
            left: any-colour-you-like.home.parents-basement.win,
            right: money.home.parents-basement.win,
          }
        - {
            suffix: domain+ca,
            left: money.home.parents-basement.win,
            right: us-and-them.home.parents-basement.win,
          }
        - {
            suffix: domain+ca,
            left: us-and-them.home.parents-basement.win,
            right: any-colour-you-like.home.parents-basement.win,
          }

    - name: Set up Proxmox A DNS record
      freeipa.ansible_freeipa.ipadnsrecord:
        ipaadmin_password: "{{ ipaadmin_password }}"
        name: proxmox
        zone_name: home.parents-basement.win
        record_type: "A"
        record_value: "10.2.137.3"

    - name: Set up NFS service on Proxmox
      freeipa.ansible_freeipa.ipaservice:
        ipaadmin_password: "{{ ipaadmin_password }}"
        name: "nfs/proxmox.{{ subdomain }}.{{ domain }}"
        host: "proxmox.{{ subdomain }}.{{ domain }}"
        skip_host_check: true

    - name: Configure users and groups
      tags: freeipa-users-and-groups
      block:
        - name: Create user {{ vault_admin_username }}
          freeipa.ansible_freeipa.ipauser:
            ipaadmin_password: "{{ ipaadmin_password }}"
            name: "{{ vault_admin_username }}"
            first: "{{ vault_admin_username }}"
            last: "{{ vault_admin_username }}"
            password: "{{ vault_admin_password }}"
            update_password: on_create
            sshpubkey: "{{ vault_admin_public_key }}"

        - name: Create user kamil
          freeipa.ansible_freeipa.ipauser:
            ipaadmin_password: "{{ ipaadmin_password }}"
            name: kamil
            first: kamil
            last: kamil

        - name: Create user keycloak-functional
          freeipa.ansible_freeipa.ipauser:
            ipaadmin_password: "{{ ipaadmin_password }}"
            name: keycloak-functional
            first: keycloak-functional
            last: keycloak-functional
            password: "{{ vault_freeipa_keycloak_functional_password }}"
            update_password: on_create

        - name: Create user opnsense-functional
          freeipa.ansible_freeipa.ipauser:
            ipaadmin_password: "{{ ipaadmin_password }}"
            name: opnsense-functional
            first: opnsense-functional
            last: opnsense-functional
            password: "{{ vault_freeipa_opnsense_functional_password }}"
            update_password: on_create

        - name: Create user jellyfin-functional
          freeipa.ansible_freeipa.ipauser:
            ipaadmin_password: "{{ ipaadmin_password }}"
            name: jellyfin-functional
            first: jellyfin-functional
            last: jellyfin-functional
            password: "{{ vault_freeipa_jellyfin_functional_password }}"
            update_password: on_create

        - name: Create user jellyseerr-functional
          freeipa.ansible_freeipa.ipauser:
            ipaadmin_password: "{{ ipaadmin_password }}"
            name: jellyseerr-functional
            first: jellyseerr-functional
            last: jellyseerr-functional
            password: "{{ vault_freeipa_jellyseerr_functional_password }}"
            update_password: on_create

        - name: Create user proxmox-functional
          freeipa.ansible_freeipa.ipauser:
            ipaadmin_password: "{{ ipaadmin_password }}"
            name: proxmox-functional
            first: proxmox-functional
            last: proxmox-functional
            password: "{{ vault_freeipa_proxmox_functional_password }}"
            update_password: on_create

        - name: Create user pbs-functional
          freeipa.ansible_freeipa.ipauser:
            ipaadmin_password: "{{ ipaadmin_password }}"
            name: pbs-functional
            first: pbs-functional
            last: pbs-functional
            password: "{{ vault_freeipa_pbs_functional_password }}"
            update_password: on_create

        - name: Create user terraform-functional
          freeipa.ansible_freeipa.ipauser:
            ipaadmin_password: "{{ ipaadmin_password }}"
            name: terraform-functional
            first: terraform-functional
            last: terraform-functional
            password: "{{ vault_freeipa_terraform_functional_password }}"
            update_password: on_create
            sshpubkey: "{{ vault_freeipa_terraform_functional_public_key }}"

        - name: Ensure group admins exists
          freeipa.ansible_freeipa.ipagroup:
            ipaadmin_password: "{{ ipaadmin_password }}"
            name: admins
            user:
              - "{{ vault_admin_username }}"
              - admin

        - name: Create group jellyfin_users
          freeipa.ansible_freeipa.ipagroup:
            ipaadmin_password: "{{ ipaadmin_password }}"
            name: jellyfin_users
            user:
              - "{{ vault_admin_username }}"
              - jellyseerr-functional
              - kamil

        - name: Create group jellyfin_admins
          freeipa.ansible_freeipa.ipagroup:
            ipaadmin_password: "{{ ipaadmin_password }}"
            name: jellyfin_admins
            user:
              - "{{ vault_admin_username }}"
              - jellyseerr-functional

        - name: Create group opnsense_admins
          freeipa.ansible_freeipa.ipagroup:
            ipaadmin_password: "{{ ipaadmin_password }}"
            name: opnsense_admins
            user:
              - "{{ vault_admin_username }}"

        - name: Create group proxmox_admins
          freeipa.ansible_freeipa.ipagroup:
            ipaadmin_password: "{{ ipaadmin_password }}"
            name: proxmox_admins
            user:
              - "{{ vault_admin_username }}"
              - terraform-functional
